# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ModelWin.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import QPixmap, QImage
import train
import cv2

import imutils

class Ui_Form_ModelWin(object):
        def setupUi(self, Form):
                Form.setObjectName("Form")
                Form.setEnabled(True)
                Form.resize(654, 553)
                Form.setStyleSheet("QWidget{\n"
        "background-color:#082840;\n"
        "border: 3px solid #1f1f1f;\n"
        "\n"
        "}\n"
        "\n"
        "")
                self.picture_box = QtWidgets.QLabel(Form)
                self.picture_box.setGeometry(QtCore.QRect(30, 270, 331, 271))
                self.picture_box.setStyleSheet("QLabel{\n"
        "border: 3px solid #ffffff;\n"
        "border-radius:20px;\n"
        "background-color:#1f1f1f;\n"
        "}")
                self.picture_box.setText("")
                self.picture_box.setObjectName("picture_box")
                self.frame_2 = QtWidgets.QFrame(Form)
                self.frame_2.setGeometry(QtCore.QRect(40, 20, 561, 231))
                self.frame_2.setStyleSheet("QFrame{\n"
        "background-color:#3c3c3e;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "\n"
        "}")
                self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_2.setObjectName("frame_2")
                self.combo_feature = QtWidgets.QComboBox(self.frame_2)
                self.combo_feature.setGeometry(QtCore.QRect(310, 100, 211, 41))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(9)
                self.combo_feature.setFont(font)
                self.combo_feature.setAutoFillBackground(False)
                self.combo_feature.setStyleSheet("QComboBox{\n"
        "\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "\n"
        "\n"
        "}\n"
        "QComboBox:hover{\n"
        "    border: 2px solid rgb(64, 71, 88);\n"
        "}\n"
        "QComboBox QAbstractItemView {\n"
        "    color: rgb(85, 170, 255);    \n"
        "    background-color: rgb(27, 29, 35);\n"
        "    padding: 10px;\n"
        "    selection-background-color: rgb(39, 44, 54);\n"
        "}")
                self.combo_feature.setIconSize(QtCore.QSize(16, 16))
                self.combo_feature.setFrame(True)
                self.combo_feature.setObjectName("combo_feature")
                self.combo_feature.addItem("")
                self.combo_feature.addItem("")
                self.combo_classifier = QtWidgets.QComboBox(self.frame_2)
                self.combo_classifier.setGeometry(QtCore.QRect(310, 160, 211, 41))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(9)
                self.combo_classifier.setFont(font)
                self.combo_classifier.setAutoFillBackground(False)
                self.combo_classifier.setStyleSheet("QComboBox{\n"
        "\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "\n"
        "}\n"
        "QComboBox:hover{\n"
        "    border: 2px solid rgb(64, 71, 88);\n"
        "}\n"
        "QComboBox QAbstractItemView {\n"
        "    color: rgb(85, 170, 255);    \n"
        "    background-color: rgb(27, 29, 35);\n"
        "    padding: 10px;\n"
        "    selection-background-color: rgb(39, 44, 54);\n"
        "}")
                self.combo_classifier.setIconSize(QtCore.QSize(16, 16))
                self.combo_classifier.setFrame(True)
                self.combo_classifier.setObjectName("combo_classifier")
                self.combo_classifier.addItem("")
                self.combo_classifier.addItem("")
                self.TestYuzdesi = QtWidgets.QLabel(self.frame_2)
                self.TestYuzdesi.setGeometry(QtCore.QRect(40, 40, 211, 41))
                self.TestYuzdesi.setStyleSheet("QLabel{\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "font-size:15px;\n"
        "}")
                self.TestYuzdesi.setObjectName("TestYuzdesi")
                self.Oznitelik = QtWidgets.QLabel(self.frame_2)
                self.Oznitelik.setGeometry(QtCore.QRect(40, 100, 211, 41))
                self.Oznitelik.setStyleSheet("QLabel{\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "font-size:15px;\n"
        "}")
                self.Oznitelik.setObjectName("Oznitelik")
                self.classifier = QtWidgets.QLabel(self.frame_2)
                self.classifier.setGeometry(QtCore.QRect(40, 160, 211, 41))
                self.classifier.setStyleSheet("QLabel{\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "font-size:15px;\n"
        "}")
                self.classifier.setObjectName("classifier")
                self.lineEdit = QtWidgets.QLineEdit(self.frame_2)
                self.lineEdit.setGeometry(QtCore.QRect(310, 39, 211, 41))
                self.lineEdit.setStyleSheet("QLineEdit{\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "font-size:15px;\n"
        "}")
                self.lineEdit.setObjectName("lineEdit")
                self.train_btn = QtWidgets.QPushButton(Form)
                self.train_btn.setGeometry(QtCore.QRect(390, 280, 201, 61))
                font = QtGui.QFont()
                font.setFamily("Copperplate Gothic Bold")
                font.setPointSize(14)
                self.train_btn.setFont(font)
                self.train_btn.setStyleSheet("QPushButton\n"
        "{\n"
        "background-color:#2AA9C7;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "\n"
        "}\n"
        "QPushButton:hover{\n"
        "background-color:#b7db35;\n"
        "}\n"
        "\n"
        "\n"
        "QPushButton:pressed{\n"
        "background-color:rgb(170, 0, 0);\n"
        "\n"
        "}\n"
        "")
                self.train_btn.setIconSize(QtCore.QSize(40, 40))
                self.train_btn.setObjectName("Model Egit")
                self.accuracy = QtWidgets.QLabel(Form)
                self.accuracy.setGeometry(QtCore.QRect(380, 360, 211, 41))
                self.accuracy.setStyleSheet("QLabel{\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "font-size:15px;\n"
        "}")
                self.accuracy.setObjectName("Accuracy:")
                self.recPres = QtWidgets.QLabel(Form)
                self.recPres.setGeometry(QtCore.QRect(380, 420, 211, 41))
                self.recPres.setStyleSheet("QLabel{\n"
        "background-color:#1f1f1f;\n"
        "border-radius:10px;\n"
        "border-radius:20px;\n"
        "border: 3px solid #ffffff;\n"
        "color:white;\n"
        "font-size:15px;\n"
        "}")
                self.recPres.setObjectName("Recall,Precision:")

                self.retranslateUi(Form)
                QtCore.QMetaObject.connectSlotsByName(Form)

        def retranslateUi(self, Form):
                _translate = QtCore.QCoreApplication.translate
                Form.setWindowTitle(_translate("Form", "Model Eğitimi"))
                self.combo_feature.setItemText(0, _translate("Form", "HOG"))
                self.combo_feature.setItemText(1, _translate("Form", "LBP"))
                self.combo_classifier.setItemText(0, _translate("Form", "SVM"))
                self.combo_classifier.setItemText(1, _translate("Form", "*"))
                self.TestYuzdesi.setText(_translate("Form", "Veriseti Test Yüzde:"))
                self.Oznitelik.setText(_translate("Form", "Öznitelik Çıkartıcı:"))
                self.classifier.setText(_translate("Form", "Sınıflandırıcı:"))
                self.train_btn.setText(_translate("Form", "Model Eğit:"))
                self.accuracy.setText(_translate("Form", "Accuracy:"))
                self.recPres.setText(_translate("Form", "Recall,Precision:"))

                self.train_btn.clicked.connect(self.egitim)

        def egitim(self):
                try:
                        conf_matrix,acc,rec,pres = train.train(self.combo_feature.currentText(),int(self.lineEdit.text())/100)
                        self.accuracy.setText("Accuracy:"+str(acc))
                        self.recPres.setText("Recall: "+str(rec)+" Precision: "+str(pres))
                except:
                        msg = QMessageBox()
                        msg.setIcon(QMessageBox.Warning)
                        msg.setText("Test Yüzdesini Kontrol Edin")
                        msg.setWindowTitle("Uyarı")
                        msg.setStandardButtons(QMessageBox.Ok)
                        retval = msg.exec_()
                
                image = cv2.imread("confusion.png")
                image = imutils.resize(image, 400, 350)
                image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

                height, width, channel = image.shape
                step = channel * width

                qimage = QImage(image.data, width, height,
                                step, QImage.Format_RGB888)

                self.picture_box.setPixmap(QPixmap.fromImage(qimage))
